# SYNTAX TEST "Packages/SSH Config/SSH Config.sublime-syntax"

User foo
#^^^^^^^ meta.block.naked.ssh_config
#^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#    ^^^ meta.mapping.value.ssh_config string.unquoted.ssh_config
Port 22
#^^^^^^ meta.block.naked.ssh_config
#^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#    ^^ meta.mapping.value.ssh_config constant.numeric.ssh_config
Include ~/.ssh/config_*_cloud
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.naked.ssh_config
#^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#       ^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config string.unquoted.ssh_config
#                     ^ keyword.operator.wildcard.ssh_config


Match Host targ?t_host Exec not_inside_network User sue
#<- - meta.block.naked - meta.block meta.block
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config - meta.block meta.block
#^^^^ keyword.control.conditional.ssh_config
#    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.statement.conditional.ssh_config
#     ^^^^ keyword.other.ssh_config
#          ^^^^^^^^^^^ entity.name.label.host-alias.ssh_config
#              ^ keyword.operator.wildcard.ssh_config
#                      ^^^^ keyword.other.ssh_config
#                           ^^^^^^^^^^^^^^^^^^ source.shell.embedded.ssh source.shell.bash meta.function-call.identifier.shell meta.path.shell variable.function.shell
#                                              ^^^^ keyword.other.ssh_config
#                                                   ^^^ string.unquoted.ssh_config
    ProxyCommand ssh -W %h:%p proxy_server
#<- - meta.statement - meta.block meta.block
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config - meta.block meta.block
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^^^^^^^^^^^^^^^^^^^^^^^^^ source.shell.embedded.ssh source.shell.bash
#                ^^^ meta.function-call.identifier.shell meta.path.shell variable.function.shell
#                   ^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.shell
#                    ^^ meta.parameter.option.shell variable.parameter.option.shell
#                    ^ punctuation.definition.parameter.shell
#                       ^^^^^ meta.string.shell string.unquoted.shell
#                       ^^ constant.character.escape.ssh
#                          ^^ constant.character.escape.ssh
#                             ^^^^^^^^^^^^ meta.string.shell string.unquoted.shell

Match Host one,two
#^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config - meta.block meta.block
#^^^^ keyword.control.conditional.ssh_config
#    ^^^^^^^^^^^^^ meta.statement.conditional.ssh_config
#     ^^^^ keyword.other.ssh_config
#          ^^^ entity.name.label.host-alias.ssh_config
#             ^ punctuation.separator.sequence.ssh_config - entity
#              ^^^ entity.name.label.host-alias.ssh_config
    User bar
    Port 22
    #    ^^ constant.numeric

Match LocalNetwork 127.0.0.1/12,10.1.21.0/24
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#^^^^ keyword.control.conditional.ssh_config
#    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.statement.conditional.ssh_config
#     ^^^^^^^^^^^^ keyword.other.ssh_config
#                  ^^^^^^^^^ meta.number.integer.other.ssh.common constant.numeric.ip-address.v4.ssh.common
#                           ^ punctuation.separator.sequence.ssh.common
#                            ^^ constant.other.range.ssh.common
#                              ^ punctuation.separator.sequence.ssh_config
#                               ^^^^^^^^^ meta.number.integer.other.ssh.common constant.numeric.ip-address.v4.ssh.common
#                                        ^ punctuation.separator.sequence.ssh.common
#                                         ^^ constant.other.range.ssh.common

Host tj
    User 2022sratna
#^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#        ^^^^^^^^^^ meta.mapping.value.ssh_config string.unquoted.ssh_config - constant

Host server serverino !other-pat?ern
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config - meta.block.match - meta.block meta.block
#^^^ keyword.declaration.host-alias.ssh_config
#   ^                 - entity
#    ^^^^^^           entity.name.label.host-alias.ssh_config
#          ^          - entity
#           ^^^^^^^^^ entity.name.label.host-alias.ssh_config
#                    ^               - entity
#                     ^              keyword.operator.logical.ssh_config
#                      ^^^^^^^^^^^^^ entity.name.label.host-alias.ssh_config
#                               ^    keyword.operator.wildcard.ssh_config
    Hostname server%h.com
#^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^ meta.mapping.key.ssh_config keyword.declaration.host.ssh_config
#            ^^^^^^^^^^^^ meta.string.host.ssh_config string.unquoted.hostname.ssh_config
#                  ^^ constant.character.escape.ssh_config
#                    ^ punctuation.separator.sequence.ssh_config
    # This is meant to be a comment
#   ^ punctuation.definition.comment.ssh.common
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.line.number-sign.ssh.common
    User=will
    # ^^      keyword.other
    #   ^     keyword.operator.assignment
    #    ^^^^ string.unquoted
    ProxyCommand nc -x localhost:8888 %h %p
    # ^^^^^^^^^^                             keyword.other
    #           ^                            - source.shell.embedded
    #            ^^^^^^^^^^^^^^^^^^^^^^^^^^  source.shell.embedded
    #                                 ^^     constant.character.escape
    #                                    ^^  constant.character.escape
    #                                      ^ - source.shell.embedded
    IdentityFile ~/.ssh/creds/%h.pem
    # ^^^^^^^^^^                     keyword.other
    #            ^^^^^^^^^^^^^^^^^^^ string.unquoted
    #                         ^^     constant.character.escape

Host *.splat?.com
#^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#^^^ keyword.declaration.host-alias.ssh_config
#   ^             - entity
#    ^^^^^^^^^^^^ entity.name.label.host-alias.ssh_config
#    ^ keyword.operator.wildcard.ssh_config
#     ^ punctuation.separator.sequence.ssh_config
#           ^ keyword.operator.wildcard.ssh_config
#            ^ punctuation.separator.sequence.ssh_config
#                ^ - entity
    User tim
#^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#        ^^^ meta.mapping.value.ssh_config string.unquoted.ssh_config
    Compression yes
#^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#               ^^^ meta.mapping.value.ssh_config constant.language.boolean.true.ssh_config
    CompressionLevel 7
#^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config - invalid
#                    ^ meta.mapping.value.ssh_config constant.numeric.ssh_config

    ProxyJump 1.1.1.1:27,jim@festival%h2:8080
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config
#             ^^^^^^^ meta.number.integer.other.ssh.common constant.numeric.ip-address.v4.ssh.common
#                    ^ punctuation.separator.ssh_config
#                     ^^ meta.number.integer.decimal.ssh.common constant.numeric.port-number.ssh.common
#                       ^ punctuation.separator.sequence.ssh_config
#                        ^^^ meta.string.user.ssh_config string.unquoted.ssh_config
#                           ^ punctuation.separator.ssh_config
#                            ^^^^^^^^^^^ string.unquoted.hostname.ssh_config
#                                    ^^ constant.character.escape.ssh_config
#                                       ^ punctuation.separator.ssh_config
#                                        ^^^^ meta.number.integer.decimal.ssh.common constant.numeric.port-number.ssh.common

# Comment
# <- comment.line.number-sign.ssh.common punctuation.definition.comment.ssh.common
#^^^^^^^^ comment.line.number-sign.ssh.common

    # Comment
#^^^ - comment
#   ^^^^^^^^^ comment.line.number-sign.ssh.common
#   ^ punctuation.definition.comment.ssh.common

; Comment
# <- comment.line.semi-colon.ssh.common punctuation.definition.comment.ssh.common
#^^^^^^^^ comment.line.semi-colon.ssh.common

    ; Comment
#^^^ - comment
#   ^^^^^^^^^ comment.line.semi-colon.ssh.common
#   ^ punctuation.definition.comment.ssh.common

Host *
#^^^^^ meta.block.host.ssh_config - meta.block meta.block
#^^^ meta.block.host.ssh_config keyword.declaration.host-alias.ssh_config
#    ^ entity.name.label.host-alias.ssh_config keyword.operator.wildcard.ssh_config
    IdentityFile ~/.ssh/id_rsa
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^^^^^^^^^^^^^ meta.mapping.value.ssh_config string.unquoted.ssh_config
    Ciphers "aes128-ctr,aes192-ctr,aes256-ctr"
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config string.quoted.double.ssh_config
#           ^ punctuation.definition.string.begin.ssh_config
#            ^^^^^^^^^^ support.function.cipher
#                      ^ punctuation.separator.sequence.ssh_config
#                       ^^^^^^^^^^ support.function.cipher
#                                 ^ punctuation.separator.sequence.ssh_config
#                                  ^^^^^^^^^^ support.function.cipher
#                                            ^ punctuation.definition.string.end.ssh_config
    UseKeychain yes
#^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#               ^^^ meta.mapping.value.ssh_config constant.language.boolean.true.ssh_config
    UseRoaming no
#^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#              ^^ meta.mapping.value.ssh_config constant.language.boolean.false.ssh_config
    StrictHostKeyChecking ask
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                         ^^^ meta.mapping.value.ssh_config constant.language.ssh_config
    StrictHostKeyChecking as
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                         ^^ meta.mapping.value.ssh_config - invalid - constant

Match Host *.example.com Exec "! grep -q -E '^\s*search[ \t]+example\.com' /etc/resolv.conf"
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#^^^^ keyword.control.conditional.ssh_config
#    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.statement.conditional.ssh_config
#     ^^^^ keyword.other.ssh_config
#          ^^^^^^^^^^^^^ entity.name.label.host-alias.ssh_config
#          ^ keyword.operator.wildcard.ssh_config
#           ^ punctuation.separator.sequence.ssh_config
#                   ^ punctuation.separator.sequence.ssh_config
#                        ^^^^ keyword.other.ssh_config
#                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.shell.embedded.ssh source.shell.bash
#                                ^^^^ variable.function.shell
##                             ^ punctuation.definition.quoted.begin.ssh_config
##                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ - variable.function
##                                                                                          ^ punctuation.definition.quoted.end.ssh_config
    ProxyJump bastion.example.com
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#             ^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config string.unquoted.hostname.ssh_config
#                    ^ punctuation.separator.sequence.ssh_config
#                            ^ punctuation.separator.sequence.ssh_config
    KnownHostsCommand echo %%%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%t%u%v%w%x%y%z%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%R%S%T%U%V%W%X%Y%Z
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.shell.embedded.ssh.knownhostscommand source.shell
#                     ^^^^^ - constant
#                     ^^^^ meta.function-call.identifier.shell support.function.shell
#                          ^^ constant.character.escape.ssh
#                            ^^^^^^ - constant
#                                  ^^ constant.character.escape.ssh
#                                    ^^ - constant
#                                      ^^ constant.character.escape.ssh
#                                        ^^ - constant
#                                          ^^^^ constant.character.escape.ssh
#                                              ^^ - constant
#                                                ^^^^ constant.character.escape.ssh
#                                                    ^^ - constant
#                                                      ^^ constant.character.escape.ssh
#                                                        ^^ - constant
#                                                          ^^ constant.character.escape.ssh
#                                                            ^^ - constant
#                                                              ^^ constant.character.escape.ssh
#                                                                ^^ - constant
#                                                                  ^^^^ constant.character.escape.ssh
#                                                                      ^^^^^^^^^^^^^^ - constant
#                                                                                    ^^ constant.character.escape.ssh
#                                                                                      ^^^^^^^^ - constant
#                                                                                              ^^^^ constant.character.escape.ssh
#                                                                                                  ^^ - constant
#                                                                                                    ^^^^ constant.character.escape.ssh
#                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ - constant
    LocalCommand echo %%%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%t%u%v%w%x%y%z%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%R%S%T%U%V%W%X%Y%Z
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.shell.embedded.ssh.localcommand source.shell
#                ^^^^^ - constant
#                ^^^^ meta.function-call.identifier.shell support.function.shell
#                     ^^ constant.character.escape.ssh
#                       ^^^^^^ - constant
#                             ^^ constant.character.escape.ssh
#                               ^^^^^^ - constant
#                                     ^^^^ constant.character.escape.ssh
#                                         ^^ - constant
#                                           ^^^^ constant.character.escape.ssh
#                                               ^^ - constant
#                                                 ^^ constant.character.escape.ssh
#                                                   ^^ - constant
#                                                     ^^ constant.character.escape.ssh
#                                                       ^^ - constant
#                                                         ^^ constant.character.escape.ssh
#                                                           ^^^^ - constant
#                                                               ^^ constant.character.escape.ssh
#                                                                 ^^^^^^^^^^^^^^ - constant
#                                                                               ^^ constant.character.escape.ssh
#                                                                                 ^^^^^^^^^^^^^^^^ - constant
#                                                                                                 ^^ constant.character.escape.ssh
#                                                                                                   ^^^^^^^^^^^^^^ - constant
#                                                                                                                 ^^ constant.character.escape.ssh
#                                                                                                                   ^^^^^^^^^^^^ - constant
    ProxyCommand echo %%%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%t%u%v%w%x%y%z%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%R%S%T%U%V%W%X%Y%Z
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.shell.embedded.ssh.proxycommand source.shell
#                ^^^^^ - constant
#                ^^^^ meta.function-call.identifier.shell support.function.shell
#                     ^^ constant.character.escape.ssh
#                       ^^^^^^^^^^^^^^ - constant
#                                     ^^ constant.character.escape.ssh
#                                       ^^^^^^^^^^ - constant
#                                                 ^^ constant.character.escape.ssh
#                                                   ^^ - constant
#                                                     ^^ constant.character.escape.ssh
#                                                       ^^ - constant
#                                                         ^^ constant.character.escape.ssh
#                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ - constant
