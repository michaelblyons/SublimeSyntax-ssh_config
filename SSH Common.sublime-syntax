%YAML 1.2
---
# This file is some kind of internal library which is used to store
# common rules which are used by the visible syntax files.
name: SSH Common
hidden: true
scope: text.ssh.common

variables:
  ssh_fingerprint: (?:AAAA(?:E2V|[BC]3N)[\w+/]+={0,3})
  # ipv4_basic: (?:(?:\d{1,3}\.){3}\d{1,3})
  # ipv6_basic: (?i:(?:[a-f0-9:]+:+)+[a-f0-9]+)
  zero_to_255: (?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9][0-9])|(?:[1-9][0-9])|[0-9])
  ipv4: (?:(?:{{zero_to_255}}\.){3}{{zero_to_255}})
  ipv6: |-
    (?xi:
      (?:::(?:ffff(?::0{1,4}){0,1}:){0,1}{{ipv4}})          # ::255.255.255.255  ::ffff:255.255.255.255  ::ffff:0:255.255.255.255 (IPv4-mapped IPv6 addresses and IPv4-translated addresses)
      |(?:(?:[0-9a-f]{1,4}:){1,4}:{{ipv4}})                 # 2001:db8:3:4::192.0.2.33  64:ff9b::192.0.2.33                       (IPv4-Embedded IPv6 Address)
      |(?:fe80:(?::[0-9a-f]{1,4}){0,4}%[0-9a-z]{1,})        # fe80::7:8%eth0     fe80::7:8%1                                      (link-local IPv6 addresses with zone index)
      |(?:(?:[0-9a-f]{1,4}:){7,7}    [0-9a-f]{1,4})         # 1:2:3:4:5:6:7:8
      |   (?:[0-9a-f]{1,4}:      (?::[0-9a-f]{1,4}){1,6})   # 1::3:4:5:6:7:8     1::3:4:5:6:7:8   1::8
      |(?:(?:[0-9a-f]{1,4}:){1,2}(?::[0-9a-f]{1,4}){1,5})   # 1::4:5:6:7:8       1:2::4:5:6:7:8   1:2::8
      |(?:(?:[0-9a-f]{1,4}:){1,3}(?::[0-9a-f]{1,4}){1,4})   # 1::5:6:7:8         1:2:3::5:6:7:8   1:2:3::8
      |(?:(?:[0-9a-f]{1,4}:){1,4}(?::[0-9a-f]{1,4}){1,3})   # 1::6:7:8           1:2:3:4::6:7:8   1:2:3:4::8
      |(?:(?:[0-9a-f]{1,4}:){1,5}(?::[0-9a-f]{1,4}){1,2})   # 1::7:8             1:2:3:4:5::7:8   1:2:3:4:5::8
      |(?:(?:[0-9a-f]{1,4}:){1,6}   :[0-9a-f]{1,4})         # 1::8               1:2:3:4:5:6::8   1:2:3:4:5:6::8
      |(?:(?:[0-9a-f]{1,4}:){1,7}   :)                      # 1::                                 1:2:3:4:5:6:7::
      |(?::(?:(?::[0-9a-f]{1,4}){1,7}|:))                   # ::2:3:4:5:6:7:8    ::2:3:4:5:6:7:8  ::8       ::
    )

contexts:
  main:
    - match: nothing at all; do not use

  pop-nl:
    - match: \n
      pop: true

  pop-before-nl:
    - match: (?=\n)
      pop: true

  comments-number-sign:
    - match: ^\s*(#)
      captures:
        1: punctuation.definition.comment.ssh.common
      push:
        - meta_scope: comment.line.number-sign.ssh.common
        - include: pop-nl

  comments-semicolon:
    - match: ^\s*(;)
      captures:
        1: punctuation.definition.comment.ssh.common
      push:
        - meta_scope: comment.line.semi-colon.ssh.common
        - include: pop-nl

  ssh-fingerprint:
    - match: '{{ssh_fingerprint}}'
      scope: variable.other.fingerprint.ssh.common

  ssh-fingerprint-with-label:
    - match: '{{ssh_fingerprint}}'
      scope: variable.other.fingerprint.ssh.common
      push:
        - include: pop-before-nl
        - match: '[ \t]*(\S(?:.+\S)?)[ \t]*$'
          captures:
            1: meta.annotation.identifier.ssh.common string.unquoted.ssh.common
          pop: true

  ssh-key-types:
    # ssh -Q key
    - match: |-
        \b(?x:
          (?:ssh-(?:dss|rsa))
        )(?:(?:-cert-v01)?(@)openssh\.com)?\b
      scope: invalid.deprecated.key-type.ssh.common
      captures:
        1: punctuation.separator.sequence.ssh.common
    - match: |-
        \b(?x:
          (?:
            (?:sk-)?ssh-ed25519|
            (?:ed25519|ecdsa)-sk|
            rsa-sha2-(?:256|512)|
            (?:sk-)?ecdsa-sha2-nistp(?:256|384|521)
          )
        )(?:(?:-cert-v01)?(@)openssh\.com)?\b
      scope: support.type.key-type.ssh.common
      captures:
        1: punctuation.separator.sequence.ssh.common

  ssh-ciphers:
    # ssh -Q ciphers
    - match: |-
        \b(?x:
          aes(?:128|192|256)-cbc|
          (?:blowfish|cast128|3des)-cbc|
          rijndael-cbc(@)lysator\.liu\.se|
          arcfour(?:128|265)?
        )\b
      scope: invalid.deprecated.cipher.ssh.common
      captures:
        1: punctuation.separator.sequence.ssh.common
    - match: |-
        \b(?x:
          aes(?:128|192|256)-ctr|
          aes(?:128|256)-gcm(@)openssh\.com|
          chacha20-poly1305(@)openssh\.com
        )\b
      scope: support.function.cipher.ssh.common
      captures:
        1: punctuation.separator.sequence.ssh.common
        2: punctuation.separator.sequence.ssh.common

  ssh-kex-algorithms:
    # ssh -Q kex
    - match: |-
        \b(?x:
          diffie-hellman-group(?:14?|-exchange)-sha1
        )\b
      scope: invalid.deprecated.kex-algorithm.ssh.common
    - match: |-
        \b(?x:
          diffie-hellman-group(?:1[468]|-exchange)-sha(?:256|512)
          |ecdh-sha2-nist(?:256|384|512)
          |curve25519-sha256(?:(@)libssh\.org)?
        )\b
      scope: support.function.kex-algorithm.ssh.common
      captures:
        1: punctuation.separator.sequence.ssh.common

  ssh-MACs:
    # ssh -Q mac
    - match: |-
        \b(?x:
          hmac-ripemd160
          |hmac-md5(?:-96)?
        )(?:(?:-etm)?(@)openssh\.com)?\b
      scope: invalid.deprecated.mac-algorithm.ssh.common
      captures:
        1: punctuation.separator.sequence.ssh.common
    - match: |-
        \b(?x:
          hmac-sha1(?:-96)?
          |hmac-sha2-(?:256|512)
          |umac-(?:64|128)
        )(?:(?:-etm)?(@)openssh\.com)?\b
      scope: support.function.mac-algorithm.ssh.common
      captures:
        1: punctuation.separator.sequence.ssh.common

  mac-addresses:
    - match: (?:[0-9a-fA-F]{2}:){5}(?:[0-9a-fA-F]{2})
      scope: entity.name.constant.mac-address.ssh.common

  ipv4:
    - match: '\b{{ipv4}}\b'
      scope: constant.numeric.ip-address.v4.ssh.common

  ipv6:
    - match: '{{ipv6}}'
      scope: constant.numeric.ip-address.v6.ssh.common

  ipv6-square-bracket:
    - match: (\[){{ipv6}}(\])
      scope: constant.numeric.ip-address.v6.ssh.common
      captures:
        1: punctuation.definition.constant.begin.ssh.common
        2: punctuation.definition.constant.end.ssh.common

  ip-addresses:
    - include: ipv6
    - include: ipv4

  ipv4-with-cidr:
    # CIDR 0-32
    - match: \b({{ipv4}})(?:(/)(3[0-2]|[12]\d|\d))?\b
      captures:
        1: constant.numeric.ip-address.v4.ssh.common
        2: punctuation.separator.sequence.ssh.common
        3: constant.other.range.ssh.common

  ipv6-with-cidr:
    # CIDR 0-128
    - match: ({{ipv6}})(?:(/)(12[0-8]|1[01]\d|[1-9]\d|\d)\b)?
      captures:
        1: constant.numeric.ip-address.v6.ssh.common
        2: punctuation.separator.sequence.ssh.common
        3: constant.other.range.ssh.common

  ip-addresses-with-cidr:
    - include: ipv6-with-cidr
    - include: ipv4-with-cidr
